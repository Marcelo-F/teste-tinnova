openapi: 3.0.4
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    Serviço para cadastro de veículos
  termsOfService: https://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.12
paths:
  /veiculo:
    post:
      tags:
        - veiculo
      summary: Salva um novo carro na base de dados
      description: Salva um novo carro na base de dados
      operationId: adicionarCarro
      requestBody:
        description: Salva um novo carro na base de dados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Veiculo'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VeiculoSalvo'

        '400':
          description: Dados enviado inválidos
        default:
          description: Inesperado errou ocorreu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /veiculo/buscarTodosVeiculos:
    get:
      tags:
        - veiculo
      summary: Recupera todos os veículos da base
      description: Faz uma busca no banco de dados para retornar todos os dados.
      operationId: buscarTodosVeiculos
      parameters:
        - name: marca
          in: query
          description: Numero da página
          required: false
          schema:
            type: string
        - name: ano
          in: query
          description: Tamanho de dados que será trazido por página
          required: false
          schema:
            type: integer
            default: 0
        - name: cor
          in: query
          description: Ordena a lista em crescente e descrecente
          required: false
          schema:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json: # Especifica o tipo de mídia
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VeiculoSalvo'

        '400':
          description: Dados enviado inválidos
  /veiculo/buscarTodosVeiculosPaginado:
    get:
      tags:
        - veiculo
      summary: Recupera todos os veículos da base
      description: Faz uma busca no banco de dados para retornar todos os dados.
      operationId: buscarTodosVeiculosPaginado
      parameters:
        - name: pagina
          in: query
          description: Numero da página
          required: false
          schema:
            type: integer
        - name: tamanho
          in: query
          description: Tamanho de dados que será trazido por página
          required: false
          schema:
            type: integer
            default: 0

      responses:
        '200':
          description: successful operation
          content:
            application/json: # Especifica o tipo de mídia
              schema:
                $ref: '#/components/schemas/TodosVeiculosPaginado'

        '400':
          description: Dados enviado inválidos

  /veiculo/{id}:
    get:
      tags:
        - veiculo
      summary: Encontro o veículo por id de registro na base.
      description: Busca um único veículo através do id.
      operationId: findById
      parameters:
        - name: id
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizado com sucesso !
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VeiculoSalvo'

        '400':
          description: Id Invalido
        '404':
          description: Dados não encontrado
        default:
          description: Inesperado errou ocorreu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - veiculo
      summary: Atualizar o veículo através do identificado id.
      description: Atualizar o veículo através do identificado id.
      operationId: atualizaVeiculoPorId
      parameters:
        - name: id
          in: path
          description: Id de cadastro do veículo na base de dados.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VeiculoSalvo'

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VeiculoSalvo'

        '400':
          description: inválido Id
        '404':
          description: veículo não encontrado
        '422':
          description: Erro na validação
        default:
          description: Inesperado errou ocorreu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    patch:
      tags:
        - veiculo
      summary: Atualiza dados especifico do veículo
      description: Atualiza dados especifico do veículo
      operationId: Atualiza dados especifico do veículo
      parameters:
        - name: id
          in: path
          description: Id de cadastro do veículo na base de dados.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VeiculoPatch'

      responses:
        '200':
          description: Atualizado com sucesso!

        '400':
          description: Dados inválidos enviado.
        default:
          description: Inesperado errou ocorreu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      tags:
        - veiculo
      summary: Apaga o cadastro  do veículo salvo na base de dados.
      description: Deleta o veículo na base.
      operationId: deletarVeiculo
      parameters:
        - name: id
          in: path
          description: Id de cadastro do veículo na base de dados.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: veículo deletado com sucesso !!
        '400':
          description: Id inválido
        default:
          description: Erro inesperado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Veiculo:
      required:
        - veiculo
        - marca
        - ano
      type: object
      properties:
        veiculo:
          type: string
          example: veiculo
          minLength: 3
          maxLength: 10
        marca:
          type: string
          example: marca do carro
          minLength: 3
          maxLength: 10
        cor:
          type: string
          example: cor

        ano:
          type: integer
          example: 1992
        descricao:
          type: string
          example: "Carro sem avarias"
          minLength: 10
          maxLength: 30
        vendido:
          type: boolean
          example: false
        created:
          type: string
          example: "2018-03-20T09:12:28Z"
          format: date-time
          pattern: "YYYY-MM-DD"
        update:
          type: string
          example: "2018-03-20T09:12:28Z"
          format: date-time
          pattern: "YYYY-MM-DD"
    VeiculoSalvo:
      required:
        - veiculo
        - marca
        - ano
      type: object
      properties:
        id:
          type: integer
          format: int64
        veiculo:
          type: string
          example: veiculo
          minLength: 3
          maxLength: 10
        marca:
          type: string
          example: marca do carro
          minLength: 3
          maxLength: 10
        cor:
          type: string
          example: cor
        ano:
          type: integer
          example: 1992
        descricao:
          type: string
          example: "Carro sem avarias"
          minLength: 10
          maxLength: 30
        vendido:
          type: boolean
          example: false
        created:
          type: string
          example: "2018-03-20T09:12:28Z"
          format: date-time
          pattern: "YYYY-MM-DD"
        update:
          type: string
          example: "2018-03-20T09:12:28Z"
          format: date-time
          pattern: "YYYY-MM-DD"
    TodosVeiculosPaginado:
      properties:
        pagina:
          type: integer
        tamanho:
          type: integer
        schema:
          type: array
          items:
            $ref: '#/components/schemas/VeiculoSalvo'


    VeiculoPatch:
      required:
        - veiculo
        - marca
        - ano
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        veiculo:
          type: string
          example: veiculo
          minLength: 3
          maxLength: 10
        marca:
          type: string
          example: marca do carro
          minLength: 3
          maxLength: 10
        vendido:
          type: boolean
          example: false
        update:
          type: string
          example: "2018-03-20T09:12:28Z"
          format: date-time
          pattern: "YYYY-MM-DD"

    
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            "write:pets": modify pets in your account
            "read:pets": read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header